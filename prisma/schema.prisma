generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  PREMIUM_USER
}

model User {
  id    String  @id @default(cuid()) @map("_id")
  name  String?
  email String  @unique
  image String?

  accounts  Account[]
  role UserRole @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  myPlayground Playground[]

  staredPlayground StarMark[]
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String
  refreshToken      String? @map("refresh_token")
  accessToken       String? @map("access_token")
  expiresAt         Int?    @map("expires_at")
  tokenType         String? @map("token_type")
  scope             String?
  idToken           String? @map("id_token")
  sessionState      String? @map("session_state")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

enum Templates {
  REACT
  NEXTJS
  EXPRESS
  VUE
  HONO
  ANGULAR
}

model Playground {
  id String @id @default(cuid()) @map("_id")
  title String
  description String?
  template Templates @default(REACT)
  StarMark StarMark[]
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  templateFiles TemplateFile[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TemplateFile {
  id String @id @default(cuid()) @map("_id")
  content Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  playgroundId String @unique
  playground Playground @relation(fields: [playgroundId], references: [id], onDelete: Cascade)
}

model StarMark {
  id String @id @default(cuid()) @map("_id")
  userId String
  playgroundId String
  isMarked Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  playground Playground @relation(fields: [playgroundId], references: [id], onDelete: Cascade)

  @@unique([userId, playgroundId])
}